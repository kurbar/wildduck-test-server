#!/bin/dash
# Dash because github actions use dash as default

if [ -n $(echo "$OSTYPE" | grep -c "darwin") ]; then
    # Mac OS X requires coreutils to be installed for greadlink
    SCRIPT=$(greadlink -f "$0")
else
    SCRIPT=$(readlink -f "$0")
fi

# Absolute path this script is in, thus /home/user/bin
SCRIPTPATH=$(dirname "$SCRIPT")

if [ "$1" != "start" ] && [ "$1" != "stop" ]; then
    echo "Usage: wildduck-test-server [start|stop]"
    exit 1
fi

if [ "$1" = "start" ]; then
    echo "Pulling latest wildduck image..."
    docker pull nodemailer/wildduck:latest
    docker pull redis:alpine
    docker pull mongo
    echo "Wildduck test server is starting (can take a bit on first use, hang tight)..."
    docker network create wdtest >/dev/null
    echo "wdtest network created"

        echo "Starting Redis container..."
        docker run -d --network=wdtest --name=wdt_redis -v /data redis:alpine
        echo "Starting Mongo container..."
        docker run -d --network=wdtest --name=wdt_mongo -v /data/db mongo
        echo "Starting Wildduck container..."
        docker run -d --network=wdtest --name=wdt_wildduck \
          -p 9080:8080 \
          -p 9143:143 \
          -p 9110:110 \
          -p 9993:993 \
          -p 9995:995 \
          nodemailer/wildduck \
          node \
          /wildduck/server.js \
          --dbs.mongo=mongodb://wdt_mongo:27017/wildduck \
          --dbs.redis.host=wdt_redis \
          --dbs.redis.port=6379 \
          --dbs.redis.db=3 \
          --api.host=0.0.0.0 \
          --api.accessToken=WDTESTSERVER \
          > /dev/null

    echo "Waiting for server to start responding..."
    i=${2:-15}
    serverUp=0
    echo "Wildduck container status: \"$( docker container inspect -f '{{.State.Status}}' wdt_wildduck )\""

    while [ "$i" -ne 0 ] && [ "$( docker container inspect -f '{{.State.Status}}' wdt_wildduck )" = "running" ]; do
        res=$(curl -s -o /dev/null -I -w "%{http_code}" http://localhost:9080/authenticate)
        i=$((i - 1))

        printf "Status: %s \n" "$res"
        if [ "$res" -ne 000 ]; then
            serverUp=1
            echo "Wildduck test server is up"
            break
        fi
        printf "Retries left: %s \n" "$i"
        sleep 1
    done

    if [ "$serverUp" -eq 0 ]; then
        echo "Unable to start wildduck test server. Please try again."
        exit 1
    fi

    echo "API is available at http://localhost:9080"
    echo "AccessToken: WDTESTSERVER"
    exit 0
fi

if [ "$1" = "stop" ]; then
    echo "Wildduck test server is shutting down..."
    docker rm -f -v wdt_wildduck > /dev/null
    docker rm -f -v wdt_mongo > /dev/null
    docker rm -f -v wdt_redis > /dev/null
    docker network rm wdtest > /dev/null
    echo "Wildduck test server closed. Bye-bye!"
fi
